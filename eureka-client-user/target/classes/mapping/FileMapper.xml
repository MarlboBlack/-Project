<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niaoren.eurekaclientuser.mapper.FileMapper" >
  <resultMap id="BaseResultMap" type="com.niaoren.eurekaclientuser.entity.File" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ftp_address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="company_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, ftp_address, company_name, time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.niaoren.eurekaclientuser.entity.File" >
    insert into user_file (id, type, ftp_address, 
      company_name, time)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{ftpAddress,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR},now())
  </insert>
  <insert id="insertSelective" parameterType="com.niaoren.eurekaclientuser.entity.File" >
    insert into user_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="ftpAddress != null" >
        ftp_address,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="time == null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="ftpAddress != null" >
        #{ftpAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="time == null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.niaoren.eurekaclientuser.entity.File" >
    update user_file
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="ftpAddress != null" >
        ftp_address = #{ftpAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niaoren.eurekaclientuser.entity.File" >
    update user_file
    set type = #{type,jdbcType=INTEGER},
      ftp_address = #{ftpAddress,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCompanyName" resultMap="BaseResultMap" parameterType="String">
    select
    <include refid="Base_Column_List"/>
    from user_file
    where company_name = #{companyName}
  </select>
  <delete id="deleteByCompanyName" parameterType="String">
    delete from user_file
    where company_name = #{companyName}
  </delete>
  <select id="selectExists" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from user_file
    where company_name = #{companyName}
    and type = #{type}
  </select>
</mapper>